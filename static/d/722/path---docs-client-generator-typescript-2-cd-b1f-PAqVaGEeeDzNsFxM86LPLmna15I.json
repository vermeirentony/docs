{"pageContext":{"html":"<h1 id=\"typescript-interfaces\"><a href=\"#typescript-interfaces\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typescript Interfaces</h1>\n<p>The TypeScript Generator allows you to create <a href=\"https://www.typescriptlang.org/docs/handbook/interfaces.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript interfaces</a> that you can embed in any TypeScript-enabled project (React, Vue.js, Angular..)</p>\n<p>To do so, run the client generator:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx @api-platform/client-generator -g typescript https://demo.api-platform.com src/ --resource foo\n<span class=\"token comment\"># Replace the URL by the entrypoint of your Hydra-enabled API</span>\n<span class=\"token comment\"># \"src/\" represents where the interfaces will be generated</span>\n<span class=\"token comment\"># Omit the resource flag to generate files for all resource types exposed by the API</span></code></pre></div>\n<p>This command parses the Hydra documentation and creates one <code class=\"language-text\">.ts</code> file for each API Resource you have defined in your application, in the <code class=\"language-text\">interfaces</code> subfolder.</p>\n<p>NOTE: If you are not sure what the entrypoint is, see <a href=\"/docs/client-generator/troubleshooting/\">Troubleshooting</a></p>\n<h2 id=\"example\"><a href=\"#example\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>Assuming you have 2 resources in your application, <code class=\"language-text\">Foo</code> and <code class=\"language-text\">Bar</code>, when you run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx @api-platform/client-generator -g typescript https://demo.api-platform.com src/</code></pre></div>\n<p>you will obtain 2 <code class=\"language-text\">.ts</code> files arranged as following:</p>\n<ul>\n<li>\n<p>src/</p>\n<ul>\n<li>interfaces/</li>\n<li>foo.ts</li>\n<li>bar.ts</li>\n</ul>\n</li>\n</ul>","editPath":"client-generator/typescript.md","title":"Typescript Interfaces","previous":{"slug":"/docs/client-generator/react-native/","title":"React Native generator"},"next":{"slug":"/docs/client-generator/troubleshooting/","title":"Troubleshooting"}}}